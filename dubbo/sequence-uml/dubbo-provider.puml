@startuml
Actor -> Bootstrap: Bootstraping Dubbo Provider
Bootstrap -> ServiceBean: Authentication Response
ServiceBean -> ServiceConfig: export()
ServiceConfig -> ServiceConfig: doExport()
ServiceConfig -> ServiceConfig: doExportUrls()
ServiceConfig -> ServiceConfig: doExportUrlsFor1Protocol()
alt local[Injvm]
ServiceConfig -> ServiceConfig: exportLocal()
ServiceConfig -> "Protocol$Adaptive": export()
"Protocol$Adaptive" -> InjvmProtocol: export()
InjvmProtocol -> InjvmExporter: new InjvmExporter()
else remote[Dubbo]
ServiceConfig -> "Protocol$Adaptive": export()
"Protocol$Adaptive" -> DubboProtocol: export()
DubboProtocol -> DubboProtocol: openServer()
DubboProtocol -> DubboProtocol: createServer()
DubboProtocol -> Exchangers: bind()
Exchangers -> Exchangers: bind()
Exchangers -> Exchangers: getExchanger()
Exchangers -> HeaderExchanger: bind()
HeaderExchanger -> HeaderExchangerServer: new HeaderExchangerServer()
HeaderExchangerServer -> Transporters: bind()
Transporters -> Transporters: getTransporter()
Transporters -> "Transporter$Adaptive": bind()
"Transporter$Adaptive" -> NettyTransporter: Dubbo SPI
NettyTransporter -> NettyServer: new NettyServer()
NettyServer -> AbstractServer: doOpen()
end
@enduml